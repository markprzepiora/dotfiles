# Enable copying and pasting in OSX.
if-shell "uname | grep -q Darwin" "set-option -g default-shell /bin/sh; set-option -g default-command 'reattach-to-user-namespace -l zsh'"

# Force zsh in WSL Mintty - don't know why this is required"
if-shell "test -d /mnt/c" "set-option -g default-shell /usr/bin/zsh"

# Enable 256 colors by default
# Also, fix home/escape weirdness over SSH (by using screen-256color instead of xterm-256color)
# set-option -g default-terminal "${TERM}"
set-option -g default-terminal "screen-256color"
set -as terminal-features 'xterm-256color:RGB'
set -sg terminal-overrides ',*:RGB'

# Make prefix Ctrl+S
set-option -g prefix C-s

# Make panes with - and |
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Move between panes with Alt+arrow
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Ctrl+A Ctrl+A to switch between last windows
bind-key C-b last-window

# When a window is closed, automatically renumber the remaining ones to remove
# gaps. This makes the behaviour more like virtually every terminal with tabs.
set-option -g renumber-windows on

# Resize panes with Prefix Ctrl+h,j,k,l
# keybindings to make resizing easier
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

#### COLOUR (Solarized 256)

# default statusbar colors
# ------------------------

# These settings are deprecated in tmux 2.9
# Link: https://github.com/tmux/tmux/issues/1689
# Link: https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#     set-option -g status-bg colour235 #base02
#     set-option -g status-fg colour136 #yellow
#     set-option -g status-attr default
set-option -g status-style bg=colour235,fg=colour136,default

# default window title colors
# ---------------------------

# These settings are deprecated in tmux 2.9
# Link: https://github.com/tmux/tmux/issues/1689
# Link: https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#     set-window-option -g window-status-fg colour244 #base0
#     set-window-option -g window-status-bg default
#     # set-window-option -g window-status-attr dim
set-window-option -g window-status-style fg=colour244,bg=default

# active window title colors
# --------------------------

# These settings are deprecated in tmux 2.9
# Link: https://github.com/tmux/tmux/issues/1689
# Link: https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#     set-window-option -g window-status-current-fg colour166 #orange
#     set-window-option -g window-status-current-bg default
#     # set-window-option -g window-status-current-attr bright
set-window-option -g window-status-current-style fg=colour166,bg=default

set-window-option -g status-left-length 15
set-window-option -g status-left "#S "

# pane border
# -----------

# These settings are deprecated in tmux 2.9
# Link: https://github.com/tmux/tmux/issues/1689
# Link: https://github.com/tmux/tmux/wiki/FAQ#how-do-i-translate--fg--bg-and--attr-options-into--style-options
#
#     set-option -g pane-border-fg colour235 #base02
#     set-option -g pane-active-border-fg colour240 #base01
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour240

# message text
# ------------
# set-option -g message-bg colour235 #base02
# set-option -g message-fg colour166 #orange
set-option -g message-style bg=colour235,fg=colour166

# pane number display
# -------------------
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

set -g history-limit 5000

# start tabs at 1
set -g base-index 1
setw -g pane-base-index 1

# alt-n to switch tabs
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t -1

# alt+shift+[ -> prev tab
bind-key -n "M-{" previous-window

# alt+shift+] -> next tab
bind-key -n "M-}" next-window

# ctrl+shift+left -> move tab left
bind-key -n C-S-left swap-window -t -1 \; previous-window

# ctrl+shift+left -> move tab right
bind-key -n C-S-right swap-window -t +1 \; next-window

# remember the current directory when switching
bind-key c new-window -c "#{pane_current_path}"

# disable $@*(# mouse
# set -g mouse on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Resources:
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/
set-window-option -g mode-keys vi
bind P paste-buffer

# More reasonable word separators in copy mode
setw -g word-separators ' @"=()[]-'

# in older tmux:
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# bind-key -t vi-copy 'r' rectangle-toggle
# if-shell "test -d /mnt/c" 'bind-key -t vi-copy Enter copy-pipe "~/Dropbox/bin/windows/clip.exe"'

# in newer tmux:
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line
if-shell "test -d /mnt/c" 'bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "~/Dropbox/bin/windows/clip.exe"'

# Tmux Plugin Manager
# ===================

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/dotfiles/.tmux/plugins'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'soyuka/tmux-current-pane-hostname'

# tmux-yank: Yank to the system clipboard
# ---------------------------------------
set -g @plugin 'tmux-plugins/tmux-yank'
# Use wl-copy when in Wayland
if-shell 'command -v wl-copy' 'set -g @override_copy_command wl-copy'
# Use clip.exe when in WSL
if-shell '[[ -f /proc/sys/fs/binfmt_misc/WSLInterop ]]' 'set -g @override_copy_command "~/Dropbox/bin/windows/clip.exe"'

# tmux-copy-toolkit: quick copy, easymotion, and more
# ---------------------------------------------------
set -g @plugin 'CrispyConductor/tmux-copy-toolkit'
# Use wl-copy when in Wayland
if-shell 'command -v wl-copy' 'set -g @copytk-copy-command wl-copy'
# Use clip.exe when in WSL
if-shell '[[ -f /proc/sys/fs/binfmt_misc/WSLInterop ]]' 'set -g @copytk-copy-command "~/Dropbox/bin/windows/clip.exe"'
# quick copy of git shas
set -g @copytk-quickcopy-match-0-2 "\\b[0-9a-f]{7,40}\\b"
set -g @copytk-flash-time 0.05
run -b '~/dotfiles/.tmux/plugins/tpm/tpm'

# Status line
set -g status-right-length 80
set -g status-right '#[bg=#(pomodoro --directory ~/Dropbox/App-Settings-Sync/Apps/Pomodoro tmux-color)]üçÖ#[default] #(pomodoro --directory ~/Dropbox/App-Settings-Sync/Apps/Pomodoro status --format "%!r‚è± ") #[fg=cyan,bold] #U@#H #[default]#[fg=blue]#[fg=red]%l:%M%P %d-%b-%Y#[default]'

# Vim suggested this
set-option -sg escape-time 10
# Vim says this fixes autoread
set-option -g focus-events on

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000
# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Order sessions by name (tmux v2 behaviour)
bind s choose-tree -sZ -O name


# Start: Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# End: Smart pane switching with awareness of Vim splits.

# The above prevents us from using Ctrl+H.
# This is a workaround to fix that. (Alt+H to backspace)
bind-key -n M-h send-keys C-h

# The above prevents us from clearing the screen with Ctrl+L.
# This is a workaround to fix that. (Alt+L to clear the screen)
bind-key -n M-l send-keys C-l

# The above prevents us from deleting forward with Ctrl+K.
# This is a workaround to fix that. (Alt+K)
bind-key -n M-k send-keys C-k

bind-key -T prefix C-s send-keys C-s
bind-key -T prefix C-j send-keys C-j

# I use this in psql to run a macro. I wish it were possible to bind it
# conditionally, so that it only works in psql.
bind-key -n M-i send-keys ":L\r"

# Open tmux-sessionizer with Prefix+g
bind-key -r g run-shell "tmux new-window tmux-sessionizer"

set -g status-left "#S "
set -g status-left-length 20

set -s set-clipboard on
set -g allow-passthrough
