#!/usr/bin/env bash
# vim: set ft=ruby:

# This file executes as a bash script, which turns around and executes Ruby via
# the line below. The -x argument to Ruby makes it discard everything before
# the second "!ruby" shebang. This allows us to work on Linux, where the
# shebang can only have one argument so we can't directly say
# "#!/usr/bin/env ruby --disable-gems". Thanks for that, Linux.
#
# If this seems confusing, don't worry. You can treat it as a normal Ruby file
# starting with the "!ruby" shebang below.

exec /usr/bin/env ruby --disable-gems -x "$0" "$@"
#!ruby

def yesno
  begin
    system("stty raw -echo")
    str = STDIN.getc
  ensure
    system("stty -raw echo")
  end

  str.upcase == "Y"
end

stdout = IO.popen(['ag', '-l0', *ARGV], in: :in, err: :err, &:read)
files = stdout.split("\0")

if files.empty?
  $stderr.puts "no files matched"
  exit 1
end

puts "Will open:"
files.each do |file|
  puts "- #{file}"
end
puts ""
print "OK? [yn] "

if yesno
  exec("vim", "-O", *files)
end
